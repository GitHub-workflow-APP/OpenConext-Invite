---
logging:
  level:
    org.springframework: WARN
    org.springframework.web: WARN
    org.springframework.security: WARN
    com.zaxxer.hikari: ERROR

spring:
  mvc:
    log-request-details: false
  security:
    oauth2:
      client:
        registration:
          oidcng:
            client-id: playground_client
            client-secret: secret
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: "authorization_code"
            scope: openid
        provider:
          oidcng:
            authorization-uri: "https://connect.test2.surfconext.nl/oidc/authorize"
            token-uri: "https://connect.test2.surfconext.nl/oidc/token"
            user-info-uri: "https://connect.test2.surfconext.nl/oidc/userinfo"
            jwk-set-uri: "https://connect.test2.surfconext.nl/oidc/certs"
            user-name-attribute: sub
            user-info-authentication-method: client_secret_basic
  jpa:
    properties:
      hibernate:
        naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost/access
    username: access
    password: secret
  flyway:
    locations: classpath:db/{vendor}/migration
    fail-on-missing-locations: true
  mail:
    host: localhost
    port: 3025

oidcng:
  discovery-url: "https://connect.test2.surfconext.nl/oidc/.well-known/openid-configuration"
  introspect-url: "https://connect.test2.surfconext.nl/oidc/introspect"
  resource-server-id: myconext.rs
  resource-server-secret: secret
  base-url: http://localhost:8080

super-admin:
  users:
    - "urn:collab:person:example.com:admin"

voot:
  user: voot
  password: secret
  group_urn_domain: test.eduid.nl

email:
  from: "no-reply@surf.nl"
  base-url: "http://localhost:3000"
  scim-failure: "j.doe@example.com"
  environment: "local"

manage:
  enabled: true
  url: "https://manage.test2.surfconext.nl"
  user: access
  password: secret

springdoc:
  pathsToMatch: "/api/external/v1/**"
  api-docs:
    path: "/ui/api-docs"
  swagger-ui:
    path: "/ui/api-ui.html"
    operationsSorter: method
    oauth:
      client-id: ${spring.security.oauth2.client.registration.oidcng.client-id}
      client-secret: ${spring.security.oauth2.client.registration.oidcng.client-secret}
      use-basic-authentication-with-access-code-grant: true


management:
  health:
    mail:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "health,info,mappings"
  endpoint:
    info:
      enabled: true
    mappings:
      enabled: true
  info:
    git:
      mode: full

server:
  error:
    include-message: always

